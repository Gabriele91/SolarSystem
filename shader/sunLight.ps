
uniform sampler2D planetTexture;
uniform sampler2D planetNightTexture;
varying vec2 varTexCoord;

varying vec3 N;
varying vec3 v;

void main (void)
{
	vec3 L = normalize(gl_LightSource[0].position.xyz - v); 
	vec3 E = normalize(-v); // we are in Eye Coordinates, so EyePos is (0,0,0)
	vec3 R = normalize(-reflect(L,N)); 
	

	

	//calculate Ambient Term:
	vec4 Iamb = gl_FrontLightProduct[0].ambient * gl_FrontMaterial.ambient;

	//calculate Diffuse Term:
	vec4 Idiff = gl_FrontLightProduct[0].diffuse  * gl_FrontMaterial.diffuse;

	// calculate Specular Term:
	vec4 Ispec = gl_FrontLightProduct[0].specular * gl_FrontMaterial.specular
				* pow(max(dot(R,E),0.0),0.3*gl_FrontMaterial.shininess);

	//////////////////////////////////////////////////////////////
	//texture color:
	vec4 dayColor, nightColor;
	float alpha		= clamp(max(dot(N,L), 0.0), 0.0, 1.0 );
	dayColor	    = texture2D( planetTexture, varTexCoord );
	nightColor		= texture2D( planetNightTexture, varTexCoord );
	vec4 texcolor   = lerp(nightColor,dayColor,alpha);
	//////////////////////////////////////////////////////////////

	gl_FragColor.rgb = (Iamb+texcolor*Idiff+Ispec).rgb; 
	gl_FragColor.a   = texcolor.a; 

}